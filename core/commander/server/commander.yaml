tests:
  start-service script:
    command: bash -c "shopt -s expand_aliases; alias exec='echo'; . /kopano/start-service.sh"
    exit-code: 0
    stdout:
      not-contains:
        - "Reading package lists..."
  start-service script (installing new package):
    command: bash -c "shopt -s expand_aliases; alias exec='echo'; . /kopano/start-service.sh"
    exit-code: 0
    stdout:
      contains:
        - "Setting up nano"
    config:
      env:
        ADDITIONAL_KOPANO_PACKAGES: "nano"
  start-service script (installing existing package):
    command: bash -c "shopt -s expand_aliases; alias exec='echo'; . /kopano/start-service.sh"
    exit-code: 0
    stdout:
      contains:
        - "INFO: kopano-server is already installed"
    config:
      env:
        ADDITIONAL_KOPANO_PACKAGES: "kopano-server"
  generate configuration for kopano-server:
    command: bash -c "shopt -s expand_aliases; alias exec='echo'; . /kopano/start-service.sh" && cat /tmp/kopano/server.cfg
    exit-code: 0
    stdout:
      contains:
        - server_listen_tls = 0.0.0.0:237
        - server_ssl_key_file = /kopano/ssl/kopano_server.pem
      not-contains:
        - #server_listen_tls = *:237
  generate ldap configuration openLDAP (default):
    command: bash -c "shopt -s expand_aliases; alias exec='echo'; . /kopano/start-service.sh" && cat /tmp/kopano/ldap.cfg
    exit-code: 0
    stdout:
      contains:
        - "!include /usr/share/kopano/ldap.openldap.cfg"
        - "#!include /usr/share/kopano/ldap.active-directory.cfg"
      not-contains:
        - "#!include /usr/share/kopano/ldap.openldap.cfg"
  generate ldap configuration for ADS:
    command: bash -c "shopt -s expand_aliases; alias exec='echo'; . /kopano/start-service.sh" && cat /tmp/kopano/ldap.cfg
    exit-code: 0
    stdout:
      contains:
        - "#!include /usr/share/kopano/ldap.openldap.cfg"
        - "!include /usr/share/kopano/ldap.active-directory.cfg"
      not-contains:
        - "#!include /usr/share/kopano/ldap.active-directory.cfg"
    config:
      env:
        KCCOMMENT_LDAP_1: "!include /usr/share/kopano/ldap.openldap.cfg"
        KCUNCOMMENT_LDAP_1: "!include /usr/share/kopano/ldap.active-directory.cfg"
  start-service script default locale:
    command: bash -c "shopt -s expand_aliases; alias exec='echo'; . /kopano/start-service.sh && locale -a"
    exit-code: 0
    stdout:
      contains:
        - C
        - C.UTF-8
        - de_DE.utf8
        - en_US.utf8
        - nl_NL.utf8
        - POSIX
  start-service script no dockerize:
    command: bash -c "shopt -s expand_aliases; alias exec='echo'; . /kopano/start-service.sh"
    exit-code: 0
    stdout:
      not-contains:
        - dockerize
    config:
      env:
        DISABLE_CHECKS: "true"
  start-service script no config updates:
    command: bash -c "shopt -s expand_aliases; alias exec='echo'; . /kopano/start-service.sh"; grep log_level /etc/kopano/server.cfg
    exit-code: 0
    stdout:
      not-contains:
        - log_level = 0x0000006
    config:
      env:
        KCCONF_SERVER_LOG_LEVEL: "0x0000006"
        DISABLE_CONFIG_CHANGES: "true"
  # TODO this needs an extension to dcommander to pass tests/test-container.yml as an additional file
  #start-service script write protected server.cfg:
  #  command: chattr +i /etc/kopano/server.cfg; bash -c "shopt -s expand_aliases; alias exec='echo'; . /kopano/start-service.sh"; chattr +i /etc/kopano/server.cfg
  #  exit-code: 0
  #  stderr:
  #    contains:
  #      - Can't open
  #      - ignoring file changes
config:
  env:
    DEBUG: ${DEBUG}
    GRAPI_BACKEND: ${GRAPI_BACKEND}
    KCCOMMENT_LDAP_1: ${KCCOMMENT_LDAP_1}
    KCCONF_LDAP_LDAP_BIND_PASSWD: ${KCCONF_LDAP_LDAP_BIND_PASSWD}
    KCCONF_LDAP_LDAP_BIND_USER: ${KCCONF_LDAP_LDAP_BIND_USER}
    KCCONF_LDAP_LDAP_SEARCH_BASE: ${KCCONF_LDAP_LDAP_SEARCH_BASE}
    KCCONF_LDAP_LDAP_URI: ${KCCONF_LDAP_LDAP_URI}
    KCCONF_SERVER_COREDUMP_ENABLED: ${KCCONF_SERVER_COREDUMP_ENABLED}
    KCCONF_SERVER_ENABLE_SSO: ${KCCONF_SERVER_ENABLE_SSO}
    KCCONF_SERVER_HIDE_EVERYONE: ${KCCONF_SERVER_HIDE_EVERYONE}
    KCCONF_SERVER_KCOIDC_INSECURE_SKIP_VERIFY: ${KCCONF_SERVER_KCOIDC_INSECURE_SKIP_VERIFY}
    KCCONF_SERVER_KCOIDC_ISSUER_IDENTIFIER: ${KCCONF_SERVER_KCOIDC_ISSUER_IDENTIFIER}
    KCCONF_SERVER_LOG_LEVEL: ${KCCONF_SERVER_LOG_LEVEL0
    KCCONF_SERVER_MYSQL_DATABASE: ${KCCONF_SERVER_MYSQL_DATABASE}
    KCCONF_SERVER_MYSQL_HOST: ${KCCONF_SERVER_MYSQL_HOST}
    KCCONF_SERVER_MYSQL_PASSWORD: ${KCCONF_SERVER_MYSQL_PASSWORD}
    KCCONF_SERVER_MYSQL_PORT: ${KCCONF_SERVER_MYSQL_PORT}
    KCCONF_SERVER_MYSQL_USER: ${KCCONF_SERVER_MYSQL_USER}
    KCCONF_SERVER_PROXY_HEADER: ${KCCONF_SERVER_PROXY_HEADER}
    KCCONF_SERVER_SERVER_NAME: ${KCCONF_SERVER_SERVER_NAME}
    KCCONF_SERVER_SERVER_SSL_CA_FILE: ${KCCONF_SERVER_SERVER_SSL_CA_FILE}
    KCCONF_SERVER_SERVER_SSL_KEY_FILE: ${KCCONF_SERVER_SERVER_SSL_KEY_FILE}
    KCCONF_SERVER_SSLKEYS_PATH: ${KCCONF_SERVER_SSLKEYS_PATH}
    KCCONF_SERVER_SYSTEM_EMAIL_ADDRESS: ${KCCONF_SERVER_SYSTEM_EMAIL_ADDRESS}
    KCUNCOMMENT_LDAP_1: ${KCUNCOMMENT_LDAP_1}
    LANG: ${LANG}
    SERVICE_TO_START: ${SERVICE_TO_START}
    PATH: ${PATH}
