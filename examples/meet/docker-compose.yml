version: "3.5"

services:
  web:
    image: ${docker_repo:-zokradonh}/kopano_web:${KWEB_VERSION:-latest}
    restart: unless-stopped
    environment:
      - EMAIL=${EMAIL:-off}
      - FQDN=${FQDNCLEANED?err}
    command: wrapper.sh
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE
      - CHOWN
      - SETGID
      - SETUID
    volumes:
      - web:/.kweb
    networks:
      web-net:
        aliases:
          - ${FQDNCLEANED?err}

  ldap:
    image: ${docker_repo:-zokradonh}/${LDAP_CONTAINER:-kopano_ldap_demo}:${LDAP_VERSION:-latest}
    restart: unless-stopped
    container_name: ${COMPOSE_PROJECT_NAME}_ldap
    environment:
      - LDAP_ORGANISATION=${LDAP_ORGANISATION}
      - LDAP_DOMAIN=${LDAP_DOMAIN}
      - LDAP_BASE_DN=${LDAP_BASE_DN}
      - LDAP_ADMIN_PASSWORD=${LDAP_ADMIN_PASSWORD}
      - LDAP_READONLY_USER=true
      - LDAP_READONLY_USER_PASSWORD=${LDAP_READONLY_USER_PASSWORD}
    env_file:
      - ldap.env
    command: "--loglevel info --copy-service"
    volumes:
      - ldap:/var/lib/ldap
      - slapd:/etc/ldap/slapd.d
    networks:
      - ldap-net

  kopano_ssl:
    image: ${docker_repo:-zokradonh}/kopano_ssl:${SSL_VERSION:-latest}
    environment:
      - FQDN=${FQDN}
      - PKI_COUNTRY=NL
    env_file:
      - kopano_ssl.env
    volumes:
      - kopanossl/:/kopano/ssl

  kopano_grapi:
    image: ${docker_repo:-zokradonh}/kopano_core:${CORE_VERSION:-latest}
    restart: unless-stopped
    container_name: ${COMPOSE_PROJECT_NAME}_grapi
    depends_on:
      - kopano_server
    volumes:
      - kopanosocket/:/run/kopano
    environment:
      - SERVICE_TO_START=grapi
      - TZ=${TZ}
    env_file:
      - kopano_grapi.env
    networks:
      - kopano-net

  kopano_kapi:
    image: ${docker_repo:-zokradonh}/kopano_core:${CORE_VERSION:-latest}
    restart: unless-stopped
    container_name: ${COMPOSE_PROJECT_NAME}_kapi
    depends_on:
      - kopano_grapi
    volumes:
      - kopanodata/:/kopano/data
      - kopanossl/:/kopano/ssl
      - kopanosocket/:/run/kopano
    environment:
      - SERVICE_TO_START=kapid
      - TZ=${TZ}
      - KCCONF_KAPID_LOG_LEVEL=DEBUG
      - KCCONF_KAPID_OIDC_ISSUER_IDENTIFIER=https://${FQDN}
      - KCCONF_KAPID_INSECURE=${INSECURE}
    env_file:
      - kopano_kapi.env
    networks:
      - kopano-net
      - web-net

  kopano_konnect:
    image: ${docker_repo:-zokradonh}/kopano_konnect:${KONNECT_VERSION:-latest}
    restart: unless-stopped
    command: wrapper.sh
    depends_on:
      - kopano_ssl
      - web
      # to be useful Konnect also need a running kopano_server, but this dependency cannot be added here since this would be a circular dependency
    volumes:
      - kopanossl/:/kopano/ssl
      - kopanosocket/:/run/kopano
    environment:
      - FQDN=${FQDN}
      - allow_client_guests=yes
      - allow_dynamic_client_registration=yes
    env_file:
      - kopano_konnect.env
    networks:
      - kopano-net
      - web-net

  kopano_kwmserver:
    image: ${docker_repo:-zokradonh}/kopano_kwmserver:${KWM_VERSION:-latest}
    restart: unless-stopped
    command: wrapper.sh
    depends_on:
      - kopano_kapi
      - kopano_konnect
    environment:
      - INSECURE=${INSECURE}
      - oidc_issuer_identifier=https://${FQDN}
      - enable_guest_api=yes
      - public_guest_access_regexp=^group/public/.*
    env_file:
      - kopano_kwmserver.env
    volumes:
      - kopanossl/:/kopano/ssl
    networks:
      - web-net

  kopano_meet:
    image: ${docker_repo:-zokradonh}/kopano_meet:${MEET_VERSION:-latest}
    restart: unless-stopped
    environment:
      - SERVICE_TO_START=meet
      - KCCONF_MEET_disableFullGAB=false
      - KCCONF_MEET_guests_enabled=true
    env_file:
      - kopano_meet.env
    depends_on:
      - kopano_kapi
      - kopano_konnect
      - kopano_kwmserver
      - web
    networks:
      - web-net

volumes:
  web:
  ldap:
  slapd:
  maildata:
  mailstate:
  mtaconfig:
  mysql:
  kopanodata:
  kopanossl:
  kopanosocket:
  kopanowebapp:
  zpushstates:
  kdavstates:

networks:
  web-net:
  kopano-net:
    driver: bridge
  ldap-net:
    driver: bridge
